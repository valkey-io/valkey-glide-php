# Generated by Cargo
# will have compiled files and executables

debug/
target/

# Git stuff
.worktrees

# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
Cargo.lock

# These are backup files generated by rustfmt
**/*.rs.bk

# MSVC Windows builds of rustc generate these, which store debugging information
*.pdb
dump.rdb
.env
python/.env*
benchmarks/results

# IDE generaged files
.vs
.vscode
.idea

# MacOS metadata
.DS_Store

# lock files

yarn.lock
package-lock.json

node_modules/

install_and_test_cp.sh

glide-logs/
logger-rs.linux-x64-gnu.node
utils/clusters/
utils/tls_crts/
utils/TestUtils.js
.build/
.project

# OSS Review Toolkit (ORT) files
**/ort*/**
**/ort_results/**

# java compiled files.
*.class

# generaged files (e.g. protobuf)
generated/
protoc-*.zip

# docs
docs/markdown/node/**
docs/site/**
copilot.yml
memory-bank/
CLAUDE*
#cpp files
cpp/benchmarks/build/
cpp/build/
cpp/examples/build/
cpp/include/glide/connection_request.pb.h

cpp/include/glide/glide_base.h
cpp/src/connection_request.pb.cc

**/.claude/settings.local.json
copilot-instructions.md
**/.yarn
build/**
coverage_html/**
src/**
include/**
lib/**
.libs/**
tests/.libs/**
*.dep
*.lo
valkey_glide.la
valkey_glide_arginfo.h
valkey_glide_cluster_arginfo.h
valkey_glide_cluster_legacy_arginfo.h
valkey_glide_legacy_arginfo.h
logger_arginfo.h
logger_legacy_arginfo.h
run-tests.php
modules/valkey_glide.so
libtool
cluster_scan_cursor_legacy_arginfo.h
cluster_scan_cursor_arginfo.h
tests/valkey_data/*/valkey.log
composer.lock
configure
configure.ac
config.h.in
config.log
config.nice
config.status
Makefile
Makefile.fragments
Makefile.objects
autom4te.cache
config.h.in~
configure~
tests/Connection_request/**
tests/GPBMetadata/**
tests/client_constructor_mock_arginfo.h
tests/client_constructor_mock_legacy_arginfo.h
vendor/**
